import Head from 'next/head'
import Link from 'next/link';

import { Auth, API, graphqlOperation } from 'aws-amplify';
import { withAuthenticator } from '@aws-amplify/ui-react';
import { useEffect, useState } from 'react';

import {
  MyProfileCard 
} from '../src/ui-components';

import { DataStore } from '@aws-amplify/datastore';
import { BasicUserTable } from '../src/models';
 
 <MyProfileCard />





async function signOut() {
  try {
    await Auth.signOut();
  } catch (error) {
    console.log('error signing out: ', error);
  }
}

function Home() {
   const [user, setUser] = useState(null);
  useEffect(() => {
    checkUser()
   }, [])

  async function checkUser(){
    const user = await Auth.currentAuthenticatedUser()
    setUser(user)
  
    
     const existingUser = await DataStore.query(BasicUserTable, (c) => c.email.eq(user.attributes.email));
    // const existingUser = await DataStore.query(BasicUserTable)

    alert(JSON.stringify(existingUser))

      // if (existingUser.length === 0) {
      //   await DataStore.save(
      //     new BasicUserTable({
      //       "email": user.attributes.email,
      //       "profile_pic": "https://images.unsplash.com/photo-1588466585717-f8041aec7875?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1374&q=80",
      //       "wallet_address": "cool",
      //       "username": user.attributes.preferred_username
      //     })
      //   );
      //   console.log('user added to table! ' + JSON.stringify(user.attributes.email));
      //   alert('account created!')
      // } else {
      //   alert('user already exists with username: ' + user.attributes.preferred_username);
      //   // console.log('existing user: '+ JSON.stringify(existingUser[0]));
        
      // }

  }

  if (!user) {
    return null;
  }

  return (
    <>
      <Head>
        <title>CantusIQ</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className>
        <h1>Email: {user.attributes.email}</h1>
        <h1>Username: {user.attributes.preferred_username}</h1>

        <MyProfileCard />

        <button onClick={signOut}>Sign out</button>
      </main>
    </>
  )
}

export default withAuthenticator(Home)
